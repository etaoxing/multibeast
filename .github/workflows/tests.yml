name: Tests

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  testing:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      fail-fast: false
      # explicit include-based build matrix, of known valid options
      matrix:
        include:
          # 20.04 supports CUDA 11.0+
          - os: ubuntu-20.04
            cuda: 11.1
            gcc: 10
            python-version: 3.7
            torch-version: 1.9.1
            torchvision-version: 0.10.1

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install CUDA
        env:
          cuda: ${{ matrix.cuda }}
        run: .github/action-scripts/install_cuda_ubuntu.sh
        shell: bash

      # Specify the correct host compilers
      - name: Install/Select gcc and g++ 
        run: |
          sudo apt-get install -y gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}
          echo "CC=/usr/bin/gcc-${{ matrix.gcc }}" >> $GITHUB_ENV
          echo "CXX=/usr/bin/g++-${{ matrix.gcc }}" >> $GITHUB_ENV
          echo "CUDAHOSTCXX=/usr/bin/g++-${{ matrix.gcc }}" >> $GITHUB_ENV

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install PyTorch ${{ matrix.torch-version }}, CUDA ${{ matrix.cuda }}
        run: |
          pip install torch==${{ matrix.torch-version}} \
            torchvision==${{ matrix.torchvision-version}} \
            cudatoolkit=${{ matrix.cuda }} \
            -f https://download.pytorch.org/whl/torch_stable.html

      - name: Install main package
        run: |
          pip install -e .[all]

      - name: Test
        run: |
          pytest --cov -v tests/

      - name: Lint
        run: flake8 .

      - name: Style
        run: |
          isort --check .
          black --check .

      - name: Docs
        run: cd docs && make clean && make html
